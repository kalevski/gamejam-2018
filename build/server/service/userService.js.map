{"version":3,"sources":["../../../server/service/userService.js"],"names":["UserService","logger","getInstance","userDao","nickname","get","then","user","create","data","creature","abilityList","abilityData","built","update","instance"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEMA,W;;;;aAEFC,M,GAAS,iBAAOC,WAAP,E;aACTC,O,GAAU,uB;;;;;4BAENC,Q,EAAU;AAAA;;AACV,mBAAO,KAAKD,OAAL,CAAaE,GAAb,CAAiBD,QAAjB,EAA2BE,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7C,oBAAIA,SAAS,IAAb,EAAmB;AACfA,2BAAO,uBAAP;AACAA,yBAAKH,QAAL,GAAgBA,QAAhB;AACA,2BAAO,MAAKD,OAAL,CAAaK,MAAb,CAAoBD,IAApB,CAAP;AACH,iBAJD,MAKK,OAAOA,IAAP;AACR,aAPM,CAAP;AAQH;;;uCAEcH,Q,EAAUK,I,EAAM;AAAA;;AAC3B,mBAAO,KAAKN,OAAL,CAAaE,GAAb,CAAiBD,QAAjB,EAA2BE,IAA3B,CAAgC,UAACC,IAAD,EAAU;AAC7C,oBAAIA,SAAS,IAAb,EAAmB;AACfA,yBAAKG,QAAL,GAAgBD,KAAKC,QAArB;AACAH,yBAAKI,WAAL,GAAmBF,KAAKE,WAAxB;AACAJ,yBAAKK,WAAL,GAAmBH,KAAKG,WAAxB;AACAL,yBAAKM,KAAL,GAAa,IAAb;AACA,2BAAO,OAAKV,OAAL,CAAaW,MAAb,CAAoBP,IAApB,CAAP;AACH;AACJ,aARM,CAAP;AASH;;;;;;AAGL,IAAIQ,WAAW,IAAf;AACAf,YAAYE,WAAZ,GAA0B,YAAW;AACjC,QAAIa,aAAa,IAAjB,EAAuB;AACnBA,mBAAW,IAAIf,WAAJ,EAAX;AACH;AACD,WAAOe,QAAP;AACH,CALD;;kBAOef,W","file":"userService.js","sourcesContent":["import Logger from \"../helper/logger\";\nimport UserDao from \"../dao/userDao\";\nimport UserDto from '../dto/userDto';\n\nclass UserService {\n    \n    logger = Logger.getInstance();\n    userDao = new UserDao();\n\n    get(nickname) {\n        return this.userDao.get(nickname).then((user) => {\n            if (user === null) {\n                user = new UserDto();\n                user.nickname = nickname;\n                return this.userDao.create(user);\n            }\n            else return user;\n        });\n    }\n    \n    createCreature(nickname, data) {\n        return this.userDao.get(nickname).then((user) => {\n            if (user !== null) {\n                user.creature = data.creature;\n                user.abilityList = data.abilityList;\n                user.abilityData = data.abilityData;\n                user.built = true;\n                return this.userDao.update(user);\n            }\n        });\n    }\n}\n\nvar instance = null;\nUserService.getInstance = function() {\n    if (instance === null) {\n        instance = new UserService();\n    }\n    return instance;\n}\n\nexport default UserService;"]}