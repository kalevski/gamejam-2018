{"version":3,"sources":["../../../../server/endpoint/api/userCreatureEndpoint.js"],"names":["UserCreatureEndpoint","request","response","logger","getInstance","userService","createCreature","params","nickname","body","then","user","json","catch","err","error"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,oB;;;;;;;;;;;6BACGC,O,EAASC,Q,EAAU;AACpB,gBAAIC,SAAS,iBAAOC,WAAP,EAAb;AACA,gBAAIC,cAAc,sBAAYD,WAAZ,EAAlB;AACAC,wBAAYC,cAAZ,CAA2BL,QAAQM,MAAR,CAAeC,QAA1C,EAAoDP,QAAQQ,IAA5D,EAAkEC,IAAlE,CAAuE,UAACC,IAAD,EAAU;AAC7ET,yBAASU,IAAT,CAAcD,IAAd;AACH,aAFD,EAEGE,KAFH,CAES,UAACC,GAAD,EAAS;AACdX,uBAAOY,KAAP,CAAaD,GAAb;AACH,aAJD;AAMH,S,CAAA;;;;;;;kBAGUd,oB","file":"userCreatureEndpoint.js","sourcesContent":["import Endpoint from '../endpoint';\nimport UserService from '../../service/userService';\nimport Logger from '../../helper/logger';\n\nclass UserCreatureEndpoint extends Endpoint {\n    post(request, response) {\n        var logger = Logger.getInstance();\n        var userService = UserService.getInstance();\n        userService.createCreature(request.params.nickname, request.body).then((user) => {\n            response.json(user);\n        }).catch((err) => {\n            logger.error(err);\n        });\n        \n    }// save data\n}\n\nexport default UserCreatureEndpoint;"]}