{"version":3,"sources":["../../../../server/endpoint/api/worldEndpoint.js"],"names":["WorldEndpoint","worldService","getInstance","sendStatus","world","nickname","toAll","players","helper","getClients","map","id","forEach","player","upgradeReq","query","send","JSON","stringify","type","data","ws","request","worldId","params","on","message","onMessage","command","buildCommand","logger","info","user","exec","error","parse"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,a;;;;;;;;;;;;;;wMAEFC,Y,GAAe,uBAAaC,WAAb,E,QAmBfC,U,GAAa,UAACC,KAAD,EAAQC,QAAR,EAAoC;AAAA,gBAAlBC,KAAkB,uEAAV,KAAU;;AAC7C,gBAAIC,UAAU,MAAKC,MAAL,CAAYC,UAAZ,CAAuB,SAAvB,EAAkCC,GAAlC,CAAsCN,MAAMO,EAA5C,CAAd;AACAJ,oBAAQK,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxB,oBAAIA,OAAOC,UAAP,CAAkBC,KAAlB,CAAwBV,QAAxB,KAAqCA,QAArC,IAAiDC,KAArD,EAA4D;AACxDO,2BAAOG,IAAP,CAAYC,KAAKC,SAAL,CAAe;AACvBC,8BAAM,QADiB;AAEvBC,8BAAMhB;AAFiB,qBAAf,CAAZ;AAIH;AACJ,aAPD;AAQH,S;;;;;kCA3BSiB,E,EAAIC,O,EAAS;AAAA;;AACnB,gBAAIC,UAAUD,QAAQE,MAAR,CAAeD,OAA7B;AACA,gBAAIlB,WAAWiB,QAAQP,KAAR,CAAcV,QAA7B;AACAgB,eAAGI,EAAH,CAAM,SAAN,EAAiB,UAACC,OAAD;AAAA,uBAAa,OAAKC,SAAL,CAAeD,OAAf,EAAwBH,OAAxB,EAAiClB,QAAjC,CAAb;AAAA,aAAjB;AACH;;;kCAESqB,O,EAASH,O,EAASlB,Q,EAAU;AAClC,gBAAIuB,UAAU,KAAK3B,YAAL,CAAkB4B,YAAlB,CAA+BH,OAA/B,CAAd;AACA,gBAAIE,YAAY,IAAhB,EAAsB;AAClB,qBAAKE,MAAL,CAAYC,IAAZ,CAAiB,WAAWR,OAAX,GAAqB,gBAArB,GAAwCK,QAAQT,IAAhD,GACX,OADW,GACDS,QAAQI,IADxB;AAEA,qBAAK/B,YAAL,CAAkBgC,IAAlB,CAAuBV,OAAvB,EAAgCK,OAAhC,EAAyC,KAAKzB,UAA9C;AACH,aAJD,MAIO;AACH,qBAAK2B,MAAL,CAAYI,KAAZ,CAAkB,yBAAlB,EAA6CjB,KAAKkB,KAAL,CAAWT,OAAX,CAA7C;AACH;AACJ;;;;;;kBAeU1B,a","file":"worldEndpoint.js","sourcesContent":["import Endpoint from '../endpoint';\nimport WorldService from '../../service/worldService';\n\nclass WorldEndpoint extends Endpoint {\n    \n    worldService = WorldService.getInstance();\n\n    websocket(ws, request) {\n        let worldId = request.params.worldId;\n        let nickname = request.query.nickname;\n        ws.on('message', (message) => this.onMessage(message, worldId, nickname));\n    }\n\n    onMessage(message, worldId, nickname) {\n        var command = this.worldService.buildCommand(message);\n        if (command !== null) {\n            this.logger.info('World[' + worldId + ']: executed: [' + command.type\n                + '] by ' + command.user);\n            this.worldService.exec(worldId, command, this.sendStatus);\n        } else {\n            this.logger.error('command can\\'t be built', JSON.parse(message));\n        }\n    }\n\n    sendStatus = (world, nickname, toAll = false) => {\n        var players = this.helper.getClients('worldId').map[world.id];\n        players.forEach((player) => {\n            if (player.upgradeReq.query.nickname !== nickname || toAll) {\n                player.send(JSON.stringify({\n                    type: 'status',\n                    data: world\n                }));\n            }\n        })\n    }\n}\n\nexport default WorldEndpoint;"]}