{"version":3,"sources":["../../../server/helper/logger.js"],"names":["Logger","_logger","_createLogger","message","_log","arguments","type","args","Array","from","i","length","prefix","cache","JSON","stringify","key","value","indexOf","push","log","Date","now","toLocaleString","options","stackString","meta","stack","join","formatted","timestamp","undefined","config","colorize","level","self","transports","Console","_timestamp","formatter","_formatter","handleExceptions","json","File","name","filename","__dirname","instance","getInstance"],"mappings":"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","file":"logger.js","sourcesContent":["import path from 'path';\nimport winston from 'winston';\n\nclass Logger {\n  constructor() {\n    this._logger = this._createLogger();\n  }\n\n  error(message) {\n    this._log('error', arguments);\n  }\n\n  warn(message) {\n    this._log('warn', arguments);\n  }\n\n  info(message) {\n    this._log('info', arguments);\n  }\n\n  verbose(message) {\n    this._log('verbose', arguments);\n  }\n\n  debug(message) {\n    this._log('debug', arguments);\n  }\n\n  silly(message) {\n    this._log('silly', arguments);\n  }\n\n  _log(type, args) {\n    var args = Array.from(args);\n    var message = '';\n    for (var i = 0; i < args.length; i++) {\n      var prefix = ', ';\n      if (i == 0) prefix = '';\n      if (typeof args[i] !== 'string') {\n        var cache = [];\n        message += prefix + '\\n' + JSON.stringify(args[i], function(key, value) {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    return;\n                }\n                cache.push(value);\n            }\n            return value;\n        }, 3);\n        cache = null;\n      } else {\n        message += prefix + args[i];\n      }\n    }\n    this._logger.log(type, message);\n  }\n\n  _timestamp() {\n    return new Date(Date.now()).toLocaleString();\n  }\n\n  _formatter(options) {\n    var stackString = options.meta.stack;\n    if (typeof stackString === 'undefined') stackString = [''];\n    stackString = stackString.join('\\n');\n    var stack = typeof options.meta.stack !== 'undefined' ? '\\n' + stackString : '';\n    var formatted = '';\n    formatted += '[' + options.timestamp() + ']: ';\n    formatted += (undefined !== options.message ? options.message : '');\n    formatted += stack;\n    return winston.config.colorize(options.level ,formatted);\n  }\n\n  _createLogger() {\n    var self = this;\n    return new (winston.Logger)({\n      transports: [\n        new (winston.transports.Console)({\n          level: 'silly',\n          timestamp: self._timestamp,\n          formatter: self._formatter,\n          handleExceptions: true,\n          json: false,\n          colorize: true\n        }),\n        new (winston.transports.File)({\n          name: 'info-file',\n          filename: path.join(__dirname, '../../log/filelog-info.log'),\n          level: 'info',\n          timestamp: self._timestamp,\n          formatter: self._formatter,\n          handleExceptions: true,\n          json: false,\n          colorize: true\n        }),\n        new (winston.transports.File)({\n          name: 'error-file',\n          filename: path.join(__dirname, '../../log/filelog-error.log'),\n          level: 'error',\n          timestamp: self._timestamp,\n          formatter: self._formatter,\n          handleExceptions: true,\n          json: false,\n          colorize: true\n        })\n      ]\n    });\n  }\n}\n\nvar instance = null;\nLogger.getInstance = () => {\n  if (instance === null) {\n    instance = new Logger();\n  }\n  return instance;\n}\n\nexport default Logger;\n"]}