{"version":3,"sources":["../../../server/helper/heartBeat.js"],"names":["HeartBeat","delay","self","_event","_eventMap","_beat","setInterval","_heart","step","Error","_registerNewEvent","signal","clearInterval","length","push","counter","Signal","i","e","dispatch"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,S;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AACjB,QAAIC,OAAO,IAAX;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,SAAL,GAAiB,EAAjB;;AAEA,SAAKC,KAAL,GAAaC,YAAY,YAAY;AACnCJ,WAAKK,MAAL;AACD,KAFY,EAEVN,KAFU,CAAb;AAGD;;;;0BAEKO,I,EAAM;AACV,UAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC/BA,eAAO,CAAP;AACD;AACD,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;AACD,UAAI,OAAO,KAAKL,SAAL,CAAeI,IAAf,CAAP,KAAgC,WAApC,EAAiD;AAC/C,aAAKE,iBAAL,CAAuBF,IAAvB;AACD;AACD,aAAO,KAAKL,MAAL,CAAY,KAAKC,SAAL,CAAeI,IAAf,CAAZ,EAAkCG,MAAzC;AACD;;;2BAEM;AACLC,oBAAc,KAAKP,KAAnB;AACA,WAAKF,MAAL,GAAc,EAAd;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACD;;;sCAEiBI,I,EAAM;AACtB,WAAKJ,SAAL,CAAeI,IAAf,IAAuB,KAAKL,MAAL,CAAYU,MAAnC;AACA,WAAKV,MAAL,CAAYW,IAAZ,CAAiB;AACfC,iBAAS,CADM;AAEfJ,gBAAQ,IAAI,kBAAQK,MAAZ,EAFO;AAGfR,cAAMA;AAHS,OAAjB;AAKD;;;6BAEQ;AACP,WAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAI,KAAKd,MAAL,CAAYU,MAAhC,EAAwCI,GAAxC,EAA6C;AAC3C,YAAIC,IAAI,KAAKf,MAAL,CAAYc,CAAZ,CAAR;AACAC,UAAEH,OAAF;AACA,YAAIG,EAAEH,OAAF,KAAcG,EAAEV,IAApB,EAA0B;AACxBU,YAAEH,OAAF,GAAY,CAAZ;AACAG,YAAEP,MAAF,CAASQ,QAAT;AACD;AACF;AACF;;;;;;kBAEYnB,S","file":"heartBeat.js","sourcesContent":["import signals from 'signals';\n\nclass HeartBeat {\n  constructor(delay) {\n    var self = this;\n    this._event = [];\n    this._eventMap = {};\n\n    this._beat = setInterval(function () {\n      self._heart();\n    }, delay);\n  }\n\n  every(step) {\n    if (typeof step === 'undefined') {\n      step = 1;\n    }\n    if (typeof step !== 'number') {\n      throw new Error('Passed step argument is not a number');\n    }\n    if (typeof this._eventMap[step] === 'undefined') {\n      this._registerNewEvent(step);\n    }\n    return this._event[this._eventMap[step]].signal;\n  }\n\n  kill() {\n    clearInterval(this._beat);\n    this._event = [];\n    this._eventMap = [];\n  }\n\n  _registerNewEvent(step) {\n    this._eventMap[step] = this._event.length;\n    this._event.push({\n      counter: 0,\n      signal: new signals.Signal(),\n      step: step\n    });\n  }\n\n  _heart() {\n    for (var i = 0; i < this._event.length; i++) {\n      var e = this._event[i];\n      e.counter++;\n      if (e.counter === e.step) {\n        e.counter = 0;\n        e.signal.dispatch();\n      }\n    }\n  }\n}\nexport default HeartBeat;"]}