{"version":3,"sources":["../../../server/adapter/storage.js"],"names":["Storage","client","logger","getInstance","_onError","err","error","createClient","on","instance"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;IAEMA,O,GAKF,mBAAc;AAAA;;AAAA;;AAAA,SAHdC,MAGc,GAHL,IAGK;AAAA,SAFdC,MAEc,GAFL,iBAAOC,WAAP,EAEK;;AAAA,SAKdC,QALc,GAKH,UAACC,GAAD,EAAS;AAChB,cAAKH,MAAL,CAAYI,KAAZ,CAAkB,qBAAqBD,GAAvC;AACH,KAPa;;AACV,SAAKJ,MAAL,GAAc,gBAAMM,YAAN,EAAd;AACA,SAAKN,MAAL,CAAYO,EAAZ,CAAe,OAAf,EAAwB,KAAKJ,QAA7B;AACH,C;;AAOL,IAAIK,WAAW,IAAf;AACAT,QAAQG,WAAR,GAAsB,YAAW;AAC7B,QAAIM,aAAa,IAAjB,EAAuB;AACnBA,mBAAW,IAAIT,OAAJ,EAAX;AACH;AACD,WAAOS,SAASR,MAAhB;AACH,CALD;;kBAOeD,O","file":"storage.js","sourcesContent":["import redis from 'redis';\nimport Logger from '../helper/logger';\n\nclass Storage {\n    \n    client = null;\n    logger = Logger.getInstance();\n\n    constructor() {\n        this.client = redis.createClient();\n        this.client.on('error', this._onError);\n    }\n\n    _onError = (err) => {\n        this.logger.error('Caching System: ' + err);\n    }\n}\n\nvar instance = null;\nStorage.getInstance = function() {\n    if (instance === null) {\n        instance = new Storage();\n    }\n    return instance.client;\n}\n\nexport default Storage;"]}